Questions, problems and solutions during the test project execution:
1. By the task RSS feed should be displayed inside the table, but it wasn’t clear how it should be displayed. First thought was that the site would have some “Get” method to return some dictionary with Feed data and due to this data would be clear how to display it. But such a method I could not find or parse from the site, so all I had is a plain site html. As a result I just managed to make the Feed news design close to the site’s.
2. As it’s been said before the website had to be parsed. I had no websites parsing experience before, usually was working with clear data sent by the backend due to some requirements. I’m not sure about some existing parsing instruments to get required data and could not find quickly something good, so just pretty bruteforce parsed needed information from the site and it’s not really good.
3. It’s wasn’t also clear how should Feed description look like. I had a lot of different variations of how this description should look like, starting from first idea of showing in the feed table only feed titles and showing title, description and posted date inside a small popup to also parsing the content of the description link to show it’s information inside a predesigned screen. But this last solution I also did not like because:
First: I was not sure, that all feed description content is made due to one single standard to parse it correctly
Second: I already parsed feed content and was not really happy of the parsing code result and didn’t want to make more of that
Third: There were absolutely no requirements of how this description should look like, so solution with showing real content inside a webview with the all design saved and pretty looked better to me. Also this web view can be customised to work better with links, redirections, etc. or maybe the best option is to forbid all actions, but I stopped on just loading the content without any configurations.
4. As I see this test project is made with all attempts also to look how candidate is working with ReactiveSwift, because using it there have really big sense and improves readability, stability and even simplifies a lot of work. With all the data synchronisations between each other and the UI. I wanted to try to write it using ReactiveSwift first, but due to the lack of experience with it managed to stop on more regular for me solution and if there would be some time left - make different brach and try to rewrite all the connections on Reactive. But due to the spent time I stopped on this result.
